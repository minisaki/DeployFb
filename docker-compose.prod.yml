version: '3.7'

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
    # driver_opts:
    #   device: /code/chat/staticfiles
    #   o: bind
    #   type: none

networks:
  my_network:
    driver: bridge
  webnet:
    driver: bridge

services:
  db:
    restart: always
    image: postgres:11
    container_name: pgfb01
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - my_network
      - webnet
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - 80:80
    depends_on:
      - web
      - channels
    networks:
      - webnet
    volumes:
      - static_volume:/home/django/web/staticfiles
      - media_volume:/home/django/web/mediafiles

  redis:
    container_name: rdfb01
    volumes:
      - redis_data:/data
    image: "redis:alpine"
    command: redis-server
    ports:
     - "6379:6379"
    networks:
      - my_network

   
  channels:
    build: .
    command: daphne -b 0.0.0.0 -p 9000 mysite.asgi:application
    # volumes:
    #   - ./code:/home/app/web/
    depends_on:
      - redis
    links:
      - redis
    networks:
      - my_network
      - webnet
  web:
    build:
      context: .
      dockerfile: Dockerfile
    # command: uwsgi --ini uwsgi.ini
    command: uwsgi --socket=:8000 --module=mysite.wsgi:application --py-autoreload=1
    container_name: webfb01
    # environment:
    #   - ENVIRONMENT=development
    links:
      - redis
    depends_on:
      - db
      - redis
    volumes:
      # - ./code:/code/
      - static_volume:/home/django/web/chat/staticfiles
      - media_volume:/home/django/web/mediafiles
    networks:
      - my_network
      - webnet
    expose:
      - 8000